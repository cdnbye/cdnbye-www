(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{912:function(t,e,s){"use strict";s.r(e);var a=s(1),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"prerequisites"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[t._v("#")]),t._v(" Prerequisites")]),t._v(" "),s("h3",{attrs:{id:"cors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cors"}},[t._v("#")]),t._v(" CORS")]),t._v(" "),s("p",[t._v("Make sure your streaming servers have proper CORS (Cross-origin resource sharing) headers so that data can be fetched across domain.")]),t._v(" "),s("h3",{attrs:{id:"options-request"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-request"}},[t._v("#")]),t._v(" OPTIONS REQUEST")]),t._v(" "),s("p",[t._v("OPTIONS requests are mandatory to be able to perform RANGE requests in a cross-domain environment. The general idea is to add the following header to the HTTP response:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Access-Control-Allow-Methods: GET, OPTIONS\n")])])]),s("h3",{attrs:{id:"range-request"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#range-request"}},[t._v("#")]),t._v(" RANGE REQUEST")]),t._v(" "),s("p",[t._v("RANGE requests is required by P2P. Add the following header to the HTTP response:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Access-Control-Allow-Headers: Range\n")])])]),s("h4",{attrs:{id:"register-your-domain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#register-your-domain"}},[t._v("#")]),t._v(" Register your Domain")]),t._v(" "),s("p",[t._v("Register your domain at "),s("em",[s("strong",[t._v("https://oms.cdnbye.com")])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",[t._v("Localhost is always whitelisted. This means that you do not have to configure anything to perform tests locally.")])]),t._v(" "),s("h4",{attrs:{id:"secure-your-site-with-https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#secure-your-site-with-https"}},[t._v("#")]),t._v(" Secure your Site with HTTPS")]),t._v(" "),s("p",[t._v("Secure your site with HTTPS, if it isn't already. HTTPS is required for Service Worker, which we'll set up in the next step.")]),t._v(" "),s("p",[t._v("To secure your site with HTTPS, you can use "),s("a",{attrs:{href:"https://letsencrypt.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Let's Encrypt"),s("OutboundLink")],1),t._v(" for a free certificate and easy integration. See Let's Encrypt's starting instructions "),s("a",{attrs:{href:"https://letsencrypt.org/getting-started/",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(" to secure your site.")]),t._v(" "),s("h2",{attrs:{id:"host-service-worker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#host-service-worker"}},[t._v("#")]),t._v(" Host Service Worker")]),t._v(" "),s("p",[t._v("To maintain a high-security standard, foreign software to be integrated into the browser with the help of ServiceWorkers is not allowed. This is only possible if the software is hosted on the same server as the web page. So the ServiceWorkers only work if they are hosted under the same domain as the main page, meaning that a client running a website needs to host our web SDK on his own servers instead of getting it from our public cloud.")]),t._v(" "),s("h3",{attrs:{id:"if-you-don-t-have-a-service-worker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#if-you-don-t-have-a-service-worker"}},[t._v("#")]),t._v(" If you don't have a Service Worker")]),t._v(" "),s("p",[t._v("Copy "),s("a",{attrs:{href:"https://github.com/swarm-cloud/media-p2p-engine/blob/main/demo/sw.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("sw.js"),s("OutboundLink")],1),t._v(" to your server and make it available at "),s("em",[s("strong",[t._v("https://your_website.com/sw.js")])]),t._v(" .")]),t._v(" "),s("h3",{attrs:{id:"if-you-already-have-a-service-worker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#if-you-already-have-a-service-worker"}},[t._v("#")]),t._v(" If you already have a Service Worker")]),t._v(" "),s("p",[t._v("Integrate media-proxy.js into your existing Service Worker by adding this code to the beginning of your Service Worker's root JavaScript file:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("importScripts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://cdn.jsdelivr.net/npm/swarmcloud-media@latest/dist/media-proxy.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Once added, 1) your existing Service Worker will continue to be installed, and 2) SwarmCloud's imported Service Worker script will handle CDN 'fetch' events to intercept MP4/MP3 request. All 'fetch' events not handled by SwarmCloud's Service Worker will fall through to your existing Service Worker's 'fetch' event handler(s).")]),t._v(" "),s("h2",{attrs:{id:"integrate-p2p-engine"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#integrate-p2p-engine"}},[t._v("#")]),t._v(" Integrate P2P Engine")]),t._v(" "),s("p",[t._v("Add the following line as early as possible to the "),s("code",[t._v("<head>")]),t._v(" tag of your index.html, you can pass any of the Client Config options to the P2PEngineMedia class constructor:")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://cdn.jsdelivr.net/npm/swarmcloud-media@latest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("Or via npm")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" swarmcloud-media\n")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" P2PEngineMedia "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'swarmcloud-media'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create P2PEngineMedia instance...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" engine "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("P2PEngineMedia")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// logLevel: 'debug',")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// swFile: './sw.js',     // you may need to change it to the actual path of sw.js")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// trackerZone: 'hk',        // if using Hongkong tracker")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// trackerZone: 'us',        // if using USA tracker")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// token: YOUR_TOKEN")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Other p2pConfig options provided by P2PEngineMedia")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get the proxied playback url")]),t._v("\nengine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getProxiedUrl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://example.mp4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    video"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"player-integration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#player-integration"}},[t._v("#")]),t._v(" Player Integration")]),t._v(" "),s("p",[t._v("You can use this SDK for clappr, videojs, jwplayer and so on, see "),s("a",{attrs:{href:"https://github.com/swarm-cloud/media-p2p-engine/tree/main/demo",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);