(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{946:function(t,e,s){"use strict";s.r(e);var a=s(1),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),s("p",[t._v('This program makes server as a peer (Super Peer) to serve clients that cannot connect to other peers. The master/worker architecture is adopted. The master is responsible for creating and scheduling worker processes, and the worker process is responsible for executing "seeding". Each worker can only seed for one channel, and a channel can be seeded by multiple workers simultaneously.')]),t._v(" "),s("h2",{attrs:{id:"server-spec"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#server-spec"}},[t._v("#")]),t._v(" Server Spec")]),t._v(" "),s("p",[t._v("Each worker process can serve up to 200 viewers, requires approximately one CPU core, 400MB of memory, and 200Mbps of bandwidth, it also requires sufficient disk space to cache content for VOD.")]),t._v(" "),s("h2",{attrs:{id:"linux-os-requirement"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-os-requirement"}},[t._v("#")]),t._v(" Linux OS Requirement")]),t._v(" "),s("ul",[s("li",[t._v("Ubuntu 20 or newer")]),t._v(" "),s("li",[t._v("CentOS 8 or newer")])]),t._v(" "),s("h2",{attrs:{id:"sdk-version-requirement"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sdk-version-requirement"}},[t._v("#")]),t._v(" SDK Version Requirement")]),t._v(" "),s("p",[t._v("Web HLS SDK version >= 2.7.0\n"),s("br"),t._v("\nAndroid SDK version >= 3.4.0")]),t._v(" "),s("h2",{attrs:{id:"install"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),s("h3",{attrs:{id:"install-automatically"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-automatically"}},[t._v("#")]),t._v(" Install Automatically")]),t._v(" "),s("p",[t._v("The script to start super peer with listening port 8080 is as follows:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -qN https://cdn.swarmcloud.net/super-peer.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" super-peer.sh --port "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n")])])]),s("h3",{attrs:{id:"install-manually"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-manually"}},[t._v("#")]),t._v(" Install Manually")]),t._v(" "),s("h4",{attrs:{id:"install-node-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-node-js"}},[t._v("#")]),t._v(" Install Node.js")]),t._v(" "),s("p",[t._v("Ignore this step if you have installed node.js.")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://npmmirror.com/mirrors/node/v18.15.0/node-v18.15.0-linux-x64.tar.xz\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xvf node-v18.15.0-linux-x64.tar.xz\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /usr/local/nodejs\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" node-v18.15.0-linux-x64/* /usr/local/nodejs/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" -s /usr/local/nodejs/bin/node /usr/local/bin\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" -s /usr/local/nodejs/bin/npm /usr/local/bin\n")])])]),s("h4",{attrs:{id:"download-super-peer-zip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#download-super-peer-zip"}},[t._v("#")]),t._v(" Download super-peer.zip")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://cdn.swarmcloud.net/super-peer.zip\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unzip")]),t._v(" super-peer.zip\n")])])]),s("h4",{attrs:{id:"start-super-peer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#start-super-peer"}},[t._v("#")]),t._v(" Start Super Peer")]),t._v(" "),s("p",[t._v("The script to start super peer with listening port 8080 is as follows:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" super-peer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("listenPort")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" .env\n")])])]),s("p",[t._v("pm2 is a Node.js application process manager that is used for keeping super peer alive forever.")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -g pm2\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" -s /usr/local/nodejs/bin/pm2 /usr/local/bin\npm2 start index.js -n super-peer\n")])])]),s("h2",{attrs:{id:"register-super-peer-in-dashboard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#register-super-peer-in-dashboard"}},[t._v("#")]),t._v(" Register Super Peer in Dashboard")]),t._v(" "),s("p",[t._v('Log in dashboard, click on "P2P Setting" -> "Server as Peer" -> "+Super Peer", input the server URL(http://ip:port) and bandwidth, then click "Confirm". If the server status shows "Stopped", it means that the server cannot be connected. Please ensure that the firewall configuration is correct.')]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",[t._v("For live streaming, super peer can only serve clients within a straight distance of 7000 kilometers. Please choose a server that is as close to the user as possible to deploy.")])]),t._v(" "),s("h2",{attrs:{id:"signal-configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#signal-configuration"}},[t._v("#")]),t._v(" Signal Configuration")]),t._v(" "),s("p",[t._v("If your application has configured signal address on the console, you need to configure the same signal address for the super peer domain.")]),t._v(" "),s("h2",{attrs:{id:"seeding-strategy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#seeding-strategy"}},[t._v("#")]),t._v(" Seeding Strategy")]),t._v(" "),s("p",[t._v("By default, the tracker server will automatically seed based on the current hot channel rankings. You can turn off automatic seeding and do it manually.")]),t._v(" "),s("h2",{attrs:{id:"monitor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#monitor"}},[t._v("#")]),t._v(" Monitor")]),t._v(" "),s("p",[t._v("Click on the monitor button of the corresponding server on the page to view information such as the number of current connected peers, uploaded traffic in KB, and system resource usage for each worker process. You can also restart or kill a specific worker process.")]),t._v(" "),s("h2",{attrs:{id:"access-token-optional"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#access-token-optional"}},[t._v("#")]),t._v(" Access Token (Optional)")]),t._v(" "),s("p",[t._v("You can set an access token before starting the program:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'accessToken=ACCESS_TOKEN'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" .env\n")])])]),s("p",[t._v("ACCESS_TOKEN is the self-defined string, which should be same as the one registered in dashboard.")]),t._v(" "),s("h2",{attrs:{id:"signaling-address-optional"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#signaling-address-optional"}},[t._v("#")]),t._v(" Signaling Address (Optional)")]),t._v(" "),s("p",[t._v("In addition to configuring the signaling address on the console, it can also be configured through the .env file to use different signaling addresses in different regions:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'signal1=wss://example.com'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" .env\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# echo 'signal2=wss://example2.com' >> .env")]),t._v("\n")])])]),s("p",[t._v("signal1 is the primary signaling address, and signal2 is the backup signaling address.")]),t._v(" "),s("h2",{attrs:{id:"auto-startup-optional"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#auto-startup-optional"}},[t._v("#")]),t._v(" Auto Startup (Optional)")]),t._v(" "),s("p",[t._v("Start the program then run:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("pm2 save "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" pm2 startup\n")])])]),s("h2",{attrs:{id:"update-super-peer-optional"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update-super-peer-optional"}},[t._v("#")]),t._v(" Update Super Peer (Optional)")]),t._v(" "),s("p",[t._v("Replace the file with new version, then restart the process:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -N https://cdn.swarmcloud.net/super-peer.zip "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unzip")]),t._v(" -o super-peer.zip\npm2 restart super-peer\npm2 save\n")])])]),s("p",[t._v("or simply run:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -qN https://cdn.swarmcloud.net/super-peer.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" super-peer.sh\n")])])]),s("h2",{attrs:{id:"restful-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#restful-api"}},[t._v("#")]),t._v(" Restful API")]),t._v(" "),s("h3",{attrs:{id:"http-header"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-header"}},[t._v("#")]),t._v(" HTTP Header")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Name")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Description")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Required")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("X-ACCESS-TOKEN")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("访问token，需要与超级节点启动时设置的一致")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("否")])])])]),t._v(" "),s("h3",{attrs:{id:"ping"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ping"}},[t._v("#")]),t._v(" Ping")]),t._v(" "),s("p",[t._v("Check connectivity while setting bandwidth or worker count")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("POST /ping\n")])])]),s("h4",{attrs:{id:"post-body"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#post-body"}},[t._v("#")]),t._v(" POST Body")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Name")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Description")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Required")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("bandwidth")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("bandwidth in Mbps")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("No")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("workers")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Force the number of worker processes")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("No")])])])]),t._v(" "),s("h4",{attrs:{id:"response"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response"}},[t._v("#")]),t._v(" Response")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Name")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("workers")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Current number of workers processes")])])])]),t._v(" "),s("h3",{attrs:{id:"seed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#seed"}},[t._v("#")]),t._v(" Seed")]),t._v(" "),s("p",[t._v("Send seeding request")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("POST /seed\n")])])]),s("h4",{attrs:{id:"post-body-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#post-body-2"}},[t._v("#")]),t._v(" POST Body")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Name")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Description")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Required")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("list")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("array")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("The list of seeding information")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Yes")])])])]),t._v(" "),s("h4",{attrs:{id:"body-example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#body-example"}},[t._v("#")]),t._v(" Body Example：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"list"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"token"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" user token\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"channel"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" channel ID(Base64 encoded)\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"trackerZone"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" us\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"live"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" live streaming or vod\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"signal1"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" primary signal address\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"signal2"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" backup signal address\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"priority"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" priority of seeding\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"keepAlive"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" always alive\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"noUseDiskCache"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" does not use disk cache for vod\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"maxConnections"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" maximum p2p connections"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" default is "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"label"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" customized super peer label\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"response-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-2"}},[t._v("#")]),t._v(" Response")]),t._v(" "),s("p",[t._v("Status: 200")]),t._v(" "),s("h3",{attrs:{id:"stats"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stats"}},[t._v("#")]),t._v(" Stats")]),t._v(" "),s("h4",{attrs:{id:"request-all-real-time-statistics"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-all-real-time-statistics"}},[t._v("#")]),t._v(" Request all real-time statistics")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("GET /stats\n")])])]),s("h4",{attrs:{id:"request-statistics-for-one-worker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-statistics-for-one-worker"}},[t._v("#")]),t._v(" Request statistics for one worker")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("GET /stats/:pid\n")])])]),s("p",[t._v("Where pid is the process id of the worker")]),t._v(" "),s("h4",{attrs:{id:"request-statistics-for-one-channelid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-statistics-for-one-channelid"}},[t._v("#")]),t._v(" Request statistics for one channelId")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("GET /stats/:channelId\n")])])]),s("p",[t._v("Where channelId is the base64 encoded channel id")]),t._v(" "),s("h3",{attrs:{id:"stop-all-workers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stop-all-workers"}},[t._v("#")]),t._v(" Stop all workers")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("POST /stop_all\n")])])]),s("h3",{attrs:{id:"stop-one-worker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stop-one-worker"}},[t._v("#")]),t._v(" Stop one worker")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("POST /stop/:pid\n")])])]),s("h3",{attrs:{id:"restart-all-workers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#restart-all-workers"}},[t._v("#")]),t._v(" Restart all workers")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("POST /restart_all\n")])])]),s("h3",{attrs:{id:"restart-one-worker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#restart-one-worker"}},[t._v("#")]),t._v(" Restart one worker")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("POST /restart/:pid\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);