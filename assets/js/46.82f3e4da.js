(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{819:function(t,e,n){"use strict";n.r(e);var a=n(1),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"实例化与参数配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实例化与参数配置"}},[t._v("#")]),t._v(" 实例化与参数配置")]),t._v(" "),n("h3",{attrs:{id:"var-engine-new-p2penginefile-url-p2pconfig"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#var-engine-new-p2penginefile-url-p2pconfig"}},[t._v("#")]),t._v(" var engine = new P2PEngineFile(url, p2pConfig);")]),t._v(" "),n("p",[t._v("创建一个新的 "),n("em",[n("strong",[t._v("P2PEngineFile")])]),t._v(" 实例，其中 "),n("em",[n("strong",[t._v("url")])]),t._v(" 是文件下载地址。如果指定了 "),n("em",[n("strong",[t._v("p2pConfig")])]),t._v(" ，那么对应的默认值将会被覆盖。")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("字段")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("默认值")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("logLevel")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("string|boolean")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("'error'")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("log的等级，分为warn、error、none，设为true等于warn，设为false等于none。")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("token")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("undefined")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("RouterLink",{attrs:{to:"/cn/views/bindings.html"}},[t._v("token")]),t._v("用于控制台多域名数据汇总展示，另外如果自定义channelId也需要设置token。")],1)]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("trackerZone")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("'eu'")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("tracker服务器地址的国家代号，分为'eu'、'hk'、'us'。")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("p2pEnabled")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("true")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("是否开启P2P。")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("webRTCConfig")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("{}")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("用于配置stun和datachannel的"),n("a",{attrs:{href:"https://github.com/feross/simple-peer",target:"_blank",rel:"noopener noreferrer"}},[t._v("字典"),n("OutboundLink")],1),t._v("。")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("pieceLength")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("number")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("1024 * 1024")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("每个切片的大小(单位：Byte)，相同pieceLength的节点才能互相连接。")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("httpMaxRetrys")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("number")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("HTTP下载某个切片的最大重试次数。")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("mitm")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("'https://cdnbye.github.io/file-p2p-engine/demo/mitm.html'")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("用于安装ServiceWorker并触发浏览器默认文件下载行为的iFrame地址，默认托管在github。")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("diskCacheLimit")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v('{"pc": 2500 * 1024 * 1024, "mobile": 1500 * 1024 * 1024}')]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("磁盘缓存的最大数据量，分为PC和mobile。")])])])]),t._v(" "),n("h2",{attrs:{id:"p2penginefile-api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#p2penginefile-api"}},[t._v("#")]),t._v(" P2PEngineFile API")]),t._v(" "),n("h4",{attrs:{id:"p2penginefile-version-static"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#p2penginefile-version-static"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("P2PEngineFile.version")])]),t._v(" (static)")]),t._v(" "),n("p",[t._v("获取 P2PEngineFile 的版本号。")]),t._v(" "),n("h4",{attrs:{id:"p2penginefile-protocolversion-static"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#p2penginefile-protocolversion-static"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("P2PEngineFile.protocolVersion")])]),t._v(" (static)")]),t._v(" "),n("p",[t._v("获取 P2P 协议的版本号。")]),t._v(" "),n("h4",{attrs:{id:"p2penginefile-issupported-static-method"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#p2penginefile-issupported-static-method"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("P2PEngineFile.isSupported()")])]),t._v(" (static method)")]),t._v(" "),n("p",[t._v("判断当前浏览器是否同时支持WebRTC datachannel。")]),t._v(" "),n("h4",{attrs:{id:"engine-start"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-start"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.start()")])])]),t._v(" "),n("p",[t._v("开始文件下载。")]),t._v(" "),n("h4",{attrs:{id:"engine-pause"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-pause"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.pause()")])])]),t._v(" "),n("p",[t._v("暂停文件下载。")]),t._v(" "),n("h4",{attrs:{id:"engine-resume"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-resume"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.resume()")])])]),t._v(" "),n("p",[t._v("继续文件下载。")]),t._v(" "),n("h4",{attrs:{id:"engine-stop"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-stop"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.stop()")])])]),t._v(" "),n("p",[t._v("停止文件下载、关闭P2P并销毁engine释放内存。")]),t._v(" "),n("h4",{attrs:{id:"engine-destroy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-destroy"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.destroy()")])])]),t._v(" "),n("p",[t._v("停止文件下载、关闭P2P并销毁engine释放内存。")]),t._v(" "),n("h4",{attrs:{id:"engine-issavebystreamsupported"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-issavebystreamsupported"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.isSaveByStreamSupported")])])]),t._v(" "),n("p",[t._v("检查浏览器是否支持基于ServiceWorker的流式下载。")]),t._v(" "),n("h4",{attrs:{id:"engine-savebyserviceworkerstream-filename"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-savebyserviceworkerstream-filename"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.saveByServiceWorkerStream(filename)")])])]),t._v(" "),n("p",[t._v("触发浏览器默认文件下载行为。")]),t._v(" "),n("h2",{attrs:{id:"p2penginefile-事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#p2penginefile-事件"}},[t._v("#")]),t._v(" P2PEngineFile 事件")]),t._v(" "),n("h4",{attrs:{id:"engine-on-metadata-function-source"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-on-metadata-function-source"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.on('metadata', function (source) {})")])])]),t._v(" "),n("p",[t._v("获取文件的元信息，包括："),n("br"),t._v("\nsource.getUrl()：文件下载地址 "),n("br"),t._v("\nsource.getMime()：文件的 MimeType "),n("br"),t._v("\nsource.getFileLength()：文件大小 "),n("br")]),t._v(" "),n("h4",{attrs:{id:"engine-on-progress-function-ratio"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-on-progress-function-ratio"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.on('progress', function (ratio) {})")])])]),t._v(" "),n("p",[t._v("文件下载进度。")]),t._v(" "),n("h4",{attrs:{id:"engine-on-failed-function"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-on-failed-function"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.on('failed', function () {})")])])]),t._v(" "),n("p",[t._v("文件下载失败，监听到该回调后可以回退到普通下载模式。")]),t._v(" "),n("h4",{attrs:{id:"engine-on-speed-function-speed"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-on-speed-function-speed"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.on('speed', function (speed) {})")])])]),t._v(" "),n("p",[t._v("平均下载速度(byte/s)。")]),t._v(" "),n("h4",{attrs:{id:"engine-on-finished-function-file"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-on-finished-function-file"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.on('finished', function (file) {})")])])]),t._v(" "),n("p",[t._v("文件下载完成后回调。file 是一个文件对象，用于对文件进行操作，包括："),n("br"),t._v("\nfile.save(fileName)：保存文件到本地，fileName是保存文件名 "),n("br"),t._v("\nfile.getBlobURL()：获取 BlobURL "),n("br"),t._v("\nfile.revokeBlobURL()：撤销对 BlobURL 的引用，释放内存 "),n("br")]),t._v(" "),n("h4",{attrs:{id:"engine-on-peerid-function-peerid"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-on-peerid-function-peerid"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.on('peerId', function (peerId) {})")])])]),t._v(" "),n("p",[t._v("当从服务端获取到peerId时回调该事件。")]),t._v(" "),n("h4",{attrs:{id:"engine-on-peers-function-peers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-on-peers-function-peers"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.on('peers', function (peers) {})")])])]),t._v(" "),n("p",[t._v("当与新的节点成功建立p2p连接时回调该事件。")]),t._v(" "),n("h4",{attrs:{id:"engine-on-stats-function-stats"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-on-stats-function-stats"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.on('stats', function (stats) {})")])])]),t._v(" "),n("p",[t._v("该回调函数可以获取p2p信息，包括："),n("br"),t._v("\nstats.totalHTTPDownloaded: 从HTTP(CDN)下载的数据量（单位KB）"),n("br"),t._v("\nstats.totalP2PDownloaded: 从P2P下载的数据量（单位KB）"),n("br"),t._v("\nstats.totalP2PUploaded: P2P上传的数据量（单位KB）"),n("br"),t._v("\nstats.p2pDownloadSpeed: P2P下载速度（单位KB/s）")]),t._v(" "),n("h3",{attrs:{id:"engine-on-serverconnected-function-connected"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-on-serverconnected-function-connected"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.on('serverConnected', function (connected) {})")])])]),t._v(" "),n("p",[t._v("当连接/断开websocket时回调该事件。")]),t._v(" "),n("h3",{attrs:{id:"engine-on-exception-function-e"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-on-exception-function-e"}},[t._v("#")]),t._v(" "),n("em",[n("strong",[t._v("engine.on('exception', function (e) {})")])])]),t._v(" "),n("p",[t._v("该回调函数可以获取SDK的异常信息，包括："),n("br"),t._v("\ne.code: 异常标识（TRACKER_EXPT SIGNAL_EXPT）"),n("br"),t._v("\ne.message: 异常信息 "),n("br"),t._v("\ne.stack: 异常堆栈信息 "),n("br")]),t._v(" "),n("h3",{attrs:{id:"通过p2pconfig获取p2p信息"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#通过p2pconfig获取p2p信息"}},[t._v("#")]),t._v(" 通过p2pConfig获取p2p信息")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("p2pConfig"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getStats")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("totalP2PDownloaded"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" totalP2PUploaded"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" totalHTTPDownloaded"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p2pDownloadSpeed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取p2p下载信息")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getPeerId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("peerId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取本节点的Id")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getPeersInfo")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("peers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取成功连接的节点的信息")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"高级用法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#高级用法"}},[t._v("#")]),t._v(" 高级用法")]),t._v(" "),n("h4",{attrs:{id:"解决动态文件路径问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决动态文件路径问题"}},[t._v("#")]),t._v(" 解决动态文件路径问题")]),t._v(" "),n("p",[t._v("某些文件地址是动态生成的，不同节点的文件地址不一样，例如example.com/clientId1/fileId.file和example.com/clientId2/fileId.file,\n而本插件默认使用文件作为channelId。这时候就要构造一个共同的chanelId，使实际下载同一文件的节点处在相同频道中。")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 必须先在 p2pConfig 设置 token ，才能自定义 channelId !")]),t._v("\np2pConfig"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    token"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("YOUR_TOKEN")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("channelId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("url")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fileId "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("extractFileIdFromUrl")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 忽略差异部分，构造一个一致的channelId，其中 extractFileIdFromUrl 需要自己定义，可以抽取url中的文件ID作为结果返回")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fileId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// channelId: VIDEO_ID       // for fixed channel id")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);