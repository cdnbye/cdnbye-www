(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{845:function(t,e,a){"use strict";a.r(e);var r=a(1),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",[t._v("基于ServiceWorker的流媒体加速引擎，支持mp4, webm, mkv, ogv, mov, wav, mp3等，适配所有浏览器（包括iOS Safari）和Web播放器！")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.npmjs.com/package/swarmcloud-media"}},[a("img",{attrs:{src:"https://img.shields.io/npm/v/swarmcloud-media.svg?style=flat",alt:"npm"}})]),t._v(" "),a("a",{attrs:{href:"https://www.jsdelivr.com/package/npm/swarmcloud-media"}},[a("img",{attrs:{src:"https://data.jsdelivr.com/v1/package/npm/swarmcloud-media/badge",alt:"jsdelivr"}})])]),t._v(" "),a("p",[t._v("本项目基于ServiceWorkers和WebRTC在所有现代浏览器和Web播放器实现了MP4/MP3的P2P能力。")]),t._v(" "),a("h3",{attrs:{id:"浏览器支持情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器支持情况"}},[t._v("#")]),t._v(" 浏览器支持情况")]),t._v(" "),a("p",[t._v("由于WebRTC已成为HTML5标准，目前大部分主流浏览器都已经支持。兼容性取决于浏览器是否支持 WebRTC 和 ServiceWorker。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("兼容性")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Chrome")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Firefox")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("macOS Safari")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Opera")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Edge")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("iOS Safari")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("IE")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("WebRTC Datachannel")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("❌")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("Service Worker")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("❌")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("SwarmCloud")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("❌")])])])]),t._v(" "),a("h3",{attrs:{id:"工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[t._v("#")]),t._v(" 工作原理")]),t._v(" "),a("ul",[a("li",[t._v("首先由客户端嵌入的SDK 注册 ServiceWorker ，从而在播放器与网络之间嵌入一层本地代理")]),t._v(" "),a("li",[t._v("播放器向本地代理请求视频流")]),t._v(" "),a("li",[t._v("本地代理（ServiceWorker）通过监听 fetch 事件，拦截全站的网络请求，并识别出 MP4/MP3 文件请求，构造并响应ReadableStream。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fetch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ⛦ magic here ⛦ */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("监听ReadableStream的pull请求，将请求的文件范围划分成若干个子范围请求，随后将这些子范围请求依次转发到主线程")]),t._v(" "),a("li",[t._v("主线程根据P2P网络情况决定是否从对等端下载，下载完成后在主线程保留一份拷贝以分享给其他节点")]),t._v(" "),a("li",[t._v("当资源被一个设备缓存之后，其他设备在请求相同资源时，将尝试优先通过P2P网络就近从该设备获取资源，而不是从成本更高、距离更远的源服务器获取（即用WebRTC替代HTTP）")]),t._v(" "),a("li",[t._v("从P2P网络获取失败或者不能缓存的资源，将自动回源")])]),t._v(" "),a("h3",{attrs:{id:"局限性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局限性"}},[t._v("#")]),t._v(" 局限性")]),t._v(" "),a("ul",[a("li",[t._v("由于ServiceWorker的限制，需要用https访问网站")]),t._v(" "),a("li",[t._v("由于ServiceWorker的限制，需要将sw.js文件部署至托管域名的服务器")])]),t._v(" "),a("h3",{attrs:{id:"在线示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在线示例"}},[t._v("#")]),t._v(" 在线示例")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://swarm-cloud.github.io/media-p2p-engine/demo/quick-start.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MP4 Demo"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://swarm-cloud.github.io/media-p2p-engine/demo/audio.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MP3 Demo"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://swarm-cloud.github.io/media-p2p-engine/demo/audio.html?type=wav",target:"_blank",rel:"noopener noreferrer"}},[t._v("WAV Demo"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=s.exports}}]);